{"version":3,"sources":["admin.coffee"],"names":[],"mappings":"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","file":"admin.js","sourcesContent":["\nmainApp = angular.module 'mainApp', [\n    'mainControllers'\n    'ngRoute'\n    'ui.bootstrap'\n]\n\nmainApp.config ['$routeProvider', ($routeProvider) ->\n    $routeProvider\n    .when '/dashboard',\n        templateUrl: '/partials/dashboard/index.html'\n        controller: 'DashboardController'\n    .when '/users',\n        templateUrl: '/partials/users/index.html'\n        controller: 'UsersController'\n\n    .otherwise\n        redirectTo: '/dashboard'\n]\n\n#-----------------------------\n# mainControllers\n#-----------------------------\n\nmainControllers = angular.module 'mainControllers', []\n\nmainControllers.controller 'DashboardController', ($scope, $http, $log) ->\n    return\n\nmainControllers.controller 'UsersController', ($scope, $http, $log, $modal) ->\n    # ユーザ一覧取得\n    $scope.loadUsers = ->\n        $http.get \"/api/user\",\n            cache: false\n            headers:\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        .success (json) ->\n            $scope.users = json\n        .error networkError\n    $scope.loadUsers()\n\n    $scope.addUser = () ->\n        $scope.editUser()\n    $scope.editUser = (user) ->\n        instance = $modal.open\n            templateUrl: '/partials/users/modal/editUser.html'\n            controller: 'UserEditController'\n            resolve:\n                user: ->\n                    if user\n                        return user\n                    else\n                        name: \"\"\n                        email: \"\"\n                        password: \"\"\n                        is_admin: 0\n        instance.result.then (selectedItem) ->\n            $scope.loadUsers()\n        , ->\n            $log.info('dismiss editUser');\n\n    $scope.removeUser = (user) ->\n        if confirm('本当に削除しますか\\n' + user.name)\n            $http\n                method: 'delete'\n                url: '/api/user/' + user.id\n            .success (json) ->\n                $scope.loadUsers()\n                alert '削除しました'\n            .error networkError\n\n    return\n\nmainControllers.controller 'UserEditController', ($scope, $http, $log, $modalInstance, user) ->\n    $scope.user = $.extend {}, user\n    $scope.user.password = ''\n    $scope.user.password_confirmation = ''\n\n    $scope.save = ->\n        if $scope.user.password != $scope.user.password_confirmation\n            return;\n\n        method = 'post'\n        url = '/api/user'\n        if user.id\n            method = 'put'\n            url += '/' + user.id\n        $http\n            method: method\n            url: url\n            data: $scope.user\n            headers:\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        .success (json) ->\n            # $log.info(json)\n            $modalInstance.close(json)\n        .error networkError\n\n    $scope.cancel = ->\n        $modalInstance.dismiss('cancel')\n\n#-----------------------------\n# utils\n#-----------------------------\n\nshowMessage = (type, message, autoclose=true) ->\n    $('#message .alert').addClass('alert-'+type).empty().append(message)\n    $('#message').removeClass('hidden').show 'fade'\n    if autoclose\n        setTimeout ->\n            $('#message').hide 'fade', ->\n                $('#message .alert').removeClass('alert-'+type)\n        , 2000\nshowSuccessMessage = (message) ->\n    showMessage 'success', message\nshowErrorMessage = (message) ->\n    showMessage 'danger', message\n\nnetworkError = (json, status) ->\n  if status != 401\n    showErrorMessage json.message\n  else\n    location.href = '/'\n"],"sourceRoot":"/source/"}